

1. write a js promise library (done)

2. use database to store character, image and sound (done)
	1) use database to store character(utf8)
	2) use file system to store image and sound (relational database is not a good place to store file)
	3) use database to store character, image and sound relationship
	4) need to consider migration (from one machine to another)
	5) need to consider user(support users in the future)

	Principle:
	1. manange change, because database will change always
	2. once the script is committed to the Source Version Control Tool (git), the script must not be modified.
	3. use table SchemaChange(ScriptName, MajorReleaseNumber, MinorReleaseNumber, BuildNumber, DateApplied) to track build version history
	4. each time we run update database tool, the tool will compare DBMaxBuildNumber (the max build number in SchemaChange table) 
	   with SrcMaxBuildNumber (the max build number in file system), if the SrcMaxBuildNumber is greater, 
	   the tool will run the added scripts in the file system to update the database.
	5. each script has prefix to mark the execution sequence, name to explain script purpose, seperator to seperate prefix and name. 
	   Prefix format: MajorReleaseNumber.MinorReleaseNumber.BuildNumber, for example: 0.0.4
	   Seperator: hyphen(-)
	   For example 0.0.4-WordSound.sql means this script is in the 4th execution position

3. write unit test

4. compute md5 of image/sound file, then store the md5 in database (done)
   file data is stored in file system, if md5 is j4k0k306jw99j6h0jhhm2nb46bvuyo5qe, 
   the file path is root_dir/j4/k0/j4k0k306jw99j6h0jhhm2nb46bvuyo5qe

5. support hundreds of thousands of users
	how to pass user info to service, to database
	parameter? 
	context? 
	parameter object?

	how to dependency injection in python?
	constructor?
	setter?

6. when user view one character, 
    if the user does not bind image to this character,
	display the default image(s).
	if the user bind some image to this character,
	display the custom image(s) in high priority.

7. record each character learning datetime for analysing learning habit and improve performance

8. compute best in-learning count for each user according the user's learning history

9. get sound for each character (done)
    1) i.e. pencil http://word.kingsunsoft.com/upload/sound/pencil.mp3

10. generate different sizes of photos automatically

11. support taking photo from Phone and Pad (done)

12. support cache because wireless is very slow

13. mobile web style (done)

14. improve network performance, i.e. network connection times (done)

15. insert english dictionary
	1) most frequent used characters
	2) common used characters
	3) related images for each character
	4) related sounds for each character

16. click "next" button 
	1) if current character has more image to display or more sound to play, display or play it.
	2) if current stage is last image and last sound of character, let user speak and then compare user's and system's (just play them)
	3) after user speak, get next character, images and sounds

17. click "previous" button
	1) the same logic as "next" button
	2) the same logic as "next" button

18. support mobile guesture
	1) slide right -> next
	2) slide left  -> previous

19. record user's speak to improve pronounce and memory

20. word choose algrithom
    1) basic 1, visual words, from most frequent, common
       level 1) simple and base word
       level 2) most frequent and visualized word
       level 3) common and visualized word
    2) basic 2, words that can be explain by simple word
       level 4) most frequent and can be expalined by grasp words
       level 5) common and can be explained by grasp words
    3) middle, simple sentence
       1) most frequenct sentence, for example, fact description
       2) common sentence
    4) advance, advance, dialog
	new word
		1) number of learning words, for example 7, each with 3 pictures
		2) word that learned just now will not show until learning next more 3 words
		3) first learn low level words, then higher level words, for example level 1 -> 2 -> 3
	review word
		1) 50% fogot rate in 24 hours
		2) review words passed in 20 minutes - 60 minutes
		3) review words passed in 60 minutes - 24 hours
		4) review words passed in 24 hours - 7 days
		5) review words passed in 7 days - 1 month
		6) review words passed in 1 month - 3 months
	never revew word
		1) grasped words

21. word grasp algrithom
    1) status: unknown, learning, learned, review, known, grasp
    2) status evolve: 
        1) unknow -> learning -> learned -> review -> grasp
        2) unknow -> learning -> learned -> review -> learning -> learned -> review -> grasp
        3) unknow -> known -> grasp
        4) unknow -> known -> learning -> learned -> review -> grasp

    3) if pass first time, mark it as known
       1) grasp standard: last time pass.
       2) if one time fail, mark it as new word (see new word)
       3) example, pass -> known -> pass -> grasp
                   pass -> known -> fail -> learning

    4) if fail firt time, mark it as new word
       repeat three times
       1) grasp standard, last two times pass.
       2) if not grasp add repeat time until grasp
       3) example, fail -> learning -> pass -> learned -> pass -> review
                   fail -> learning -> pass -> learned -> fail -> learning
    5) review
       1) example, pass -> grasp
                   fail -> learning
    6) use table UserProgressAudit to track the grasp process
       1) record user learning detail. pass or fail each time
       2) use the audit information to find usage status, like or un-statisfy, usage interval

    7) how to check pass or fail
       whether use hint

22. feedback each time (pass or fail)

23. multi-meanings word

24. english - chinese dictionary

